# interval_union { #genominterv.interval_union }

```python
genominterv.interval_union(query, annot)
```

This function computes the union of two sets of genomic intervals. The genomic intervals
in each set must be non-overlapping. This can be achieved using interval_collapse.

## Parameters {.doc-section .doc-section-parameters}

<code>[**query**]{.parameter-name} [:]{.parameter-annotation-sep} [[pd](`pandas`).[DataFrame](`pandas.DataFrame`)]{.parameter-annotation}</code>

:   Data frame with query intervals.

<code>[**annot**]{.parameter-name} [:]{.parameter-annotation-sep} [[pd](`pandas`).[DataFrame](`pandas.DataFrame`)]{.parameter-annotation}</code>

:   Data frame with annotation intervals.

## Returns {.doc-section .doc-section-returns}

<code>[]{.parameter-name} [:]{.parameter-annotation-sep} [[pd](`pandas`).[DataFrame](`pandas.DataFrame`)]{.parameter-annotation}</code>

:   A data frame with chr, start, end columns representing the union.

## See Also {.doc-section .doc-section-see-also}

[](`genominterv.interval_diff`), [](`genominterv.interval_intersect`), [](`genominterv.interval_collapse`).