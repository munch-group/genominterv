# remap_interval_data { #genominterv.remap_interval_data }

```python
genominterv.remap_interval_data(query, annot)
```

Computes the distance from each query interval to the closest interval
in annot. Original coordinates are preserved as `orig_start` and
`orig_end` columns. If a query interval overlaps the midpoint between two
annot intervals it is split into two intervals proximal to each
annot interval, thus contributing two rows to the returned data frame.
Intervals from `query` that overlap intervals in `annot` are discarded.

## Parameters {.doc-section .doc-section-parameters}

<code>[**query**]{.parameter-name} [:]{.parameter-annotation-sep} []{.parameter-annotation}</code>

:   Data frame with query intervals.

<code>[**annot**]{.parameter-name} [:]{.parameter-annotation-sep} []{.parameter-annotation}</code>

:   Data frame with annotation intervals.

## Returns {.doc-section .doc-section-returns}

<code>[]{.parameter-name} [:]{.parameter-annotation-sep} []{.parameter-annotation}</code>

:   A data frame with remapped intervals.

## See Also {.doc-section .doc-section-see-also}

If you do not want to retain the original columns in `query`, use [](`~genominterv.interval_distance`).